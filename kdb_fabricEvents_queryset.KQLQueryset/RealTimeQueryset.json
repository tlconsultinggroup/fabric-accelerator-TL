{"payload":{"connections":{"-1921270356":{"clusterType":"Engine","name":"-1921270356","connectionString":"","databases":{"-1921270356/b22b1edd-6292-97ea-4089-fe9314ea1177":{"id":"-1921270356/b22b1edd-6292-97ea-4089-fe9314ea1177","name":"b22b1edd-6292-97ea-4089-fe9314ea1177","prettyName":"kdb_fabricEvents","fetchState":"notStarted","fetchStateError":"","tables":{},"functions":{},"entityGroups":{},"accessMode":"ReadWrite","minorVersion":5,"majorVersion":1307}},"id":"-1921270356","fetchState":"notStarted","fetchStateError":"","tooBigToCache":true,"serviceOffering":"Trident"}},"tabs":[{"id":"9e6e1619-d0c3-4827-bc1f-34cc9440777e","queryRange":{"startLineNumber":8,"startColumn":1,"endLineNumber":20,"endColumn":1},"title":"Queries","text":"// Useful troubleshooting queries\n.show operations ('88d7c22c-63ed-431f-874c-24cc9d74ac23');\n\n.show table * policy  update\n\n.show ingestion failures ;\n\nlet _startTime = now()-10d;\nlet _endTime = now();\nlet span = 1d;\nmaterialized_view(\"dailyAggJobEvents\")\n| where [\"time\"] between (_startTime .._endTime ) and isnotempty(itemName)\n// | where itemName in (_itemName) or   isempty( _itemName)\n| extend jobDurationMin = datetime_diff('minute',jobEndTimeUtc,jobStartTimeUtc)\n| make-series tsDurationMin = avg(jobDurationMin) default=int(null) on [\"time\"] from _startTime to _endTime step span by itemName\n| extend tsDurationMin = series_fill_linear(tsDurationMin) //fill missing null values with linear interpolation\n| extend (anamolies, score,baseline) = series_decompose_anomalies(tsDurationMin,1.5,-1,\"linefit\")\n| project itemName,tsDurationMin, anamolies,[\"time\"]\n\n\n// let minTs = toscalar (materialized_view(\"dailyAggJobEvents\")|summarize  min([\"time\"]));\n// let maxTs = toscalar (materialized_view(\"dailyAggJobEvents\")|summarize  max([\"time\"]));\n// materialized_view(\"dailyAggJobEvents\")\n// // |where [\"time\"] between (_startTime .._endTime )\n// | extend jobDurationMin = datetime_diff('minute',jobEndTimeUtc,jobStartTimeUtc)\n// | make-series avgJobDurationMin = avg(jobDurationMin) default=0 on [\"time\"] from minTs to maxTs step 1d by itemName\n// | extend maAvgJobDurationMin = series_fir(avgJobDurationMin, repeat(1,5),true, true)\n// | extend residual = series_subtract(avgJobDurationMin, maAvgJobDurationMin)\n// | render timechart \n\n// //Test Highwatermark\n// let hwm = toscalar(jobEventsExpanded|summarize hwm= iff(isnull(max([\"time\"])),ago(30d), max([\"time\"])));\n// jobEvents\n// |where [\"time\"] > hwm\n// |extend jd = parse_json(data)\n// |extend itemId = tostring(jd.itemId),\n//         itemName = tostring(jd.itemName),\n//         workspaceId = tostring(jd.workspaceId),\n//         workspaceName = tostring(jd.workspaceName),\n//         itemKind = tostring(jd.itemKind),\n//         executingPrincipalId = tostring(jd.executingPrincipalId),\n//         executingPrincipalType = tostring(jd.executingPrincipalType),\n//         jobInstanceId = tostring(jd.jobInstanceId),\n//         jobType = tostring(jd.jobType),\n//         jobInvokeType = tostring(jd.jobInvokeType),\n//         jobStatus = tostring(jd.jobStatus),\n//         jobStartTimeUtc = todatetime(jd.jobStartTimeUtc),\n//         jobEndTimeUtc = todatetime(jd.jobEndTimeUtc),\n//         jobScheduleTimeUtc = todatetime(jd.jobScheduleTimeUtc),\n//         jobDefinitionObjectId = todatetime(jd.jobDefinitionObjectId)\n// |project-away jd,data\n// |order by [\"time\"] desc;\n\n\n\n\n\n\n\n","commandInContext":"let _startTime = now()-10d;\nlet _endTime = now();\nlet span = 1d;\nmaterialized_view(\"dailyAggJobEvents\")\n| where [\"time\"] between (_startTime .._endTime ) and isnotempty(itemName)\n// | where itemName in (_itemName) or   isempty( _itemName)\n| extend jobDurationMin = datetime_diff('minute',jobEndTimeUtc,jobStartTimeUtc)\n| make-series tsDurationMin = avg(jobDurationMin) default=int(null) on [\"time\"] from _startTime to _endTime step span by itemName\n| extend tsDurationMin = series_fill_linear(tsDurationMin) //fill missing null values with linear interpolation\n| extend (anamolies, score,baseline) = series_decompose_anomalies(tsDurationMin,1.5,-1,\"linefit\")\n| project itemName,tsDurationMin, anamolies,[\"time\"]","executionStatus":"done","clientRequestId":"Kusto.Web.RTA.QuerySet;37014985-efe4-4b5a-83a0-cc405344a9a2;3d9633da-6e78-4fd8-8136-900beba8b39a","completionInfo":-945705724,"entityInContext":"-1921270356/b22b1edd-6292-97ea-4089-fe9314ea1177","commandType":"Query","commandWithoutLeadingComments":"let _startTime = now()-10d;\nlet _endTime = now();\nlet span = 1d;\nmaterialized_view(\"dailyAggJobEvents\")\n| where [\"time\"] between (_startTime .._endTime ) and isnotempty(itemName)\n// | where itemName in (_itemName) or   isempty( _itemName)\n| extend jobDurationMin = datetime_diff('minute',jobEndTimeUtc,jobStartTimeUtc)\n| make-series tsDurationMin = avg(jobDurationMin) default=int(null) on [\"time\"] from _startTime to _endTime step span by itemName\n| extend tsDurationMin = series_fill_linear(tsDurationMin) //fill missing null values with linear interpolation\n| extend (anamolies, score,baseline) = series_decompose_anomalies(tsDurationMin,1.5,-1,\"linefit\")\n| project itemName,tsDurationMin, anamolies,[\"time\"]","hideEmptyColumns":false,"cursorPosition":{"lineNumber":8,"column":1},"isProtectedMode":false},{"id":"c33ab28e-0811-404b-b018-a10f4fb1ca9e","queryRange":{"startLineNumber":1,"startColumn":1,"endLineNumber":55,"endColumn":10},"title":"Functions","text":".execute  database script <|\n    .create-or-alter function with (docstring ='Function called on JobEvents update policy to flatten/expand JSON data') \n    expandJobEvents() \n    {\n        jobEvents\n        |extend jd = parse_json(data)\n        |extend itemId = tostring(jd.itemId),\n                itemName = tostring(jd.itemName),\n                workspaceId = tostring(jd.workspaceId),\n                workspaceName = tostring(jd.workspaceName),\n                itemKind = tostring(jd.itemKind),\n                executingPrincipalId = tostring(jd.executingPrincipalId),\n                executingPrincipalType = tostring(jd.executingPrincipalType),\n                jobInstanceId = tostring(jd.jobInstanceId),\n                jobType = tostring(jd.jobType),\n                jobInvokeType = tostring(jd.jobInvokeType),\n                jobStatus = tostring(jd.jobStatus),\n                jobStartTimeUtc = todatetime(jd.jobStartTimeUtc),\n                jobEndTimeUtc = todatetime(jd.jobEndTimeUtc),\n                jobScheduleTimeUtc = todatetime(jd.jobScheduleTimeUtc),\n                jobDefinitionObjectId = todatetime(jd.jobDefinitionObjectId),\n                jobDurationSeconds = tolong(datetime_diff('second',todatetime(jd.jobEndTimeUtc),todatetime(jd.jobStartTimeUtc)))\n        |summarize arg_max(EventProcessedUtcTime,*) by id //deduplicate\n        |project-away jd,data\n    }\n    .create-or-alter function with (docstring ='Function called on workspaceEvents update policy to flatten/expand JSON data')\n    expandWorkspaceEvents()\n    {\n        workspaceEvents\n        | extend ed = parse_json(data)\n        | extend itemId = tostring(ed.itemId), \n                itemName = tostring(ed.itemName),\n                workspaceId = tostring(ed.workspaceId), \n                workspaceName = tostring(ed.workspaceName), \n                itemKind = tostring(ed.itemKind),\n                executingPrincipalId = tostring(ed.executingPrincipalId),\n                executingPrincipalType =  tostring(ed.executingPrincipalType)\n        | summarize arg_max(EventProcessedUtcTime,*) by id //deduplicate\n        | project-away ed, data\n    }\n    .create-or-alter function with (docstring ='Function called on storageEvents update policy to flatten/expand JSON data')\n    expandStorageEvents()\n    {\n        storageEvents\n        | extend sd = parse_json(data)\n        | extend api = tostring(sd.api),\n                clientRequestId = tostring(sd.clientRequestId),\n                requestId = tostring(sd.requestId),\n                eTag = tostring(sd.eTag),\n                blobUrl = tostring(sd.blobUrl),\n                url = tostring(sd.url),\n                sequencer = tostring(sd.sequencer)\n        | summarize arg_max(EventProcessedUtcTime,*) by id //deduplicate\n        | project-away sd, data\n    }    ","commandInContext":".execute  database script <|\n    .create-or-alter function with (docstring ='Function called on JobEvents update policy to flatten/expand JSON data') \n    expandJobEvents() \n    {\n        jobEvents\n        |extend jd = parse_json(data)\n        |extend itemId = tostring(jd.itemId),\n                itemName = tostring(jd.itemName),\n                workspaceId = tostring(jd.workspaceId),\n                workspaceName = tostring(jd.workspaceName),\n                itemKind = tostring(jd.itemKind),\n                executingPrincipalId = tostring(jd.executingPrincipalId),\n                executingPrincipalType = tostring(jd.executingPrincipalType),\n                jobInstanceId = tostring(jd.jobInstanceId),\n                jobType = tostring(jd.jobType),\n                jobInvokeType = tostring(jd.jobInvokeType),\n                jobStatus = tostring(jd.jobStatus),\n                jobStartTimeUtc = todatetime(jd.jobStartTimeUtc),\n                jobEndTimeUtc = todatetime(jd.jobEndTimeUtc),\n                jobScheduleTimeUtc = todatetime(jd.jobScheduleTimeUtc),\n                jobDefinitionObjectId = todatetime(jd.jobDefinitionObjectId),\n                jobDurationSeconds = tolong(datetime_diff('second',todatetime(jd.jobEndTimeUtc),todatetime(jd.jobStartTimeUtc)))\n        |summarize arg_max(EventProcessedUtcTime,*) by id //deduplicate\n        |project-away jd,data\n    }\n    .create-or-alter function with (docstring ='Function called on workspaceEvents update policy to flatten/expand JSON data')\n    expandWorkspaceEvents()\n    {\n        workspaceEvents\n        | extend ed = parse_json(data)\n        | extend itemId = tostring(ed.itemId), \n                itemName = tostring(ed.itemName),\n                workspaceId = tostring(ed.workspaceId), \n                workspaceName = tostring(ed.workspaceName), \n                itemKind = tostring(ed.itemKind),\n                executingPrincipalId = tostring(ed.executingPrincipalId),\n                executingPrincipalType =  tostring(ed.executingPrincipalType)\n        | summarize arg_max(EventProcessedUtcTime,*) by id //deduplicate\n        | project-away ed, data\n    }\n    .create-or-alter function with (docstring ='Function called on storageEvents update policy to flatten/expand JSON data')\n    expandStorageEvents()\n    {\n        storageEvents\n        | extend sd = parse_json(data)\n        | extend api = tostring(sd.api),\n                clientRequestId = tostring(sd.clientRequestId),\n                requestId = tostring(sd.requestId),\n                eTag = tostring(sd.eTag),\n                blobUrl = tostring(sd.blobUrl),\n                url = tostring(sd.url),\n                sequencer = tostring(sd.sequencer)\n        | summarize arg_max(EventProcessedUtcTime,*) by id //deduplicate\n        | project-away sd, data\n    }    ","executionStatus":"done","clientRequestId":"Kusto.Web.RTA.QuerySet;0559afd2-5115-4a28-89c3-77ddc3e42295;55731437-81cb-4610-85d2-7c5f9c644e4f","entityInContext":"-1921270356/b22b1edd-6292-97ea-4089-fe9314ea1177","commandType":"AdminCommand","commandWithoutLeadingComments":".execute  database script <|\n    .create-or-alter function with (docstring ='Function called on JobEvents update policy to flatten/expand JSON data') \n    expandJobEvents() \n    {\n        jobEvents\n        |extend jd = parse_json(data)\n        |extend itemId = tostring(jd.itemId),\n                itemName = tostring(jd.itemName),\n                workspaceId = tostring(jd.workspaceId),\n                workspaceName = tostring(jd.workspaceName),\n                itemKind = tostring(jd.itemKind),\n                executingPrincipalId = tostring(jd.executingPrincipalId),\n                executingPrincipalType = tostring(jd.executingPrincipalType),\n                jobInstanceId = tostring(jd.jobInstanceId),\n                jobType = tostring(jd.jobType),\n                jobInvokeType = tostring(jd.jobInvokeType),\n                jobStatus = tostring(jd.jobStatus),\n                jobStartTimeUtc = todatetime(jd.jobStartTimeUtc),\n                jobEndTimeUtc = todatetime(jd.jobEndTimeUtc),\n                jobScheduleTimeUtc = todatetime(jd.jobScheduleTimeUtc),\n                jobDefinitionObjectId = todatetime(jd.jobDefinitionObjectId),\n                jobDurationSeconds = tolong(datetime_diff('second',todatetime(jd.jobEndTimeUtc),todatetime(jd.jobStartTimeUtc)))\n        |summarize arg_max(EventProcessedUtcTime,*) by id //deduplicate\n        |project-away jd,data\n    }\n    .create-or-alter function with (docstring ='Function called on workspaceEvents update policy to flatten/expand JSON data')\n    expandWorkspaceEvents()\n    {\n        workspaceEvents\n        | extend ed = parse_json(data)\n        | extend itemId = tostring(ed.itemId), \n                itemName = tostring(ed.itemName),\n                workspaceId = tostring(ed.workspaceId), \n                workspaceName = tostring(ed.workspaceName), \n                itemKind = tostring(ed.itemKind),\n                executingPrincipalId = tostring(ed.executingPrincipalId),\n                executingPrincipalType =  tostring(ed.executingPrincipalType)\n        | summarize arg_max(EventProcessedUtcTime,*) by id //deduplicate\n        | project-away ed, data\n    }\n    .create-or-alter function with (docstring ='Function called on storageEvents update policy to flatten/expand JSON data')\n    expandStorageEvents()\n    {\n        storageEvents\n        | extend sd = parse_json(data)\n        | extend api = tostring(sd.api),\n                clientRequestId = tostring(sd.clientRequestId),\n                requestId = tostring(sd.requestId),\n                eTag = tostring(sd.eTag),\n                blobUrl = tostring(sd.blobUrl),\n                url = tostring(sd.url),\n                sequencer = tostring(sd.sequencer)\n        | summarize arg_max(EventProcessedUtcTime,*) by id //deduplicate\n        | project-away sd, data\n    }","hideEmptyColumns":false,"cursorPosition":{"lineNumber":36,"column":74},"isProtectedMode":false},{"id":"2f519fa5-65c0-44c6-887c-d1c58254838e","queryRange":{"startLineNumber":1,"startColumn":1,"endLineNumber":6,"endColumn":1},"title":"Tables","text":".execute database script <|\n    .set-or-append jobEventsExpanded <|expandJobEvents|take 0 \n    .set-or-append workspaceEventsExpanded <|expandWorkspaceEvents| take 0\n    .set-or-append storageEventsExpanded <|expandStorageEvents| take 0\n\n\n\n\n","commandInContext":".execute database script <|\n    .set-or-append jobEventsExpanded <|expandJobEvents|take 0 \n    .set-or-append workspaceEventsExpanded <|expandWorkspaceEvents| take 0\n    .set-or-append storageEventsExpanded <|expandStorageEvents| take 0\n\n","executionStatus":"gotFromCache","clientRequestId":"Kusto.Web.RTA.QuerySet;0559afd2-5115-4a28-89c3-77ddc3e42295;07f8db98-ea19-4b61-93e9-5f60939850c0","entityInContext":"-1921270356/b22b1edd-6292-97ea-4089-fe9314ea1177","commandType":"AdminCommand","commandWithoutLeadingComments":".execute database script <|\n    .set-or-append jobEventsExpanded <|expandJobEvents|take 0 \n    .set-or-append workspaceEventsExpanded <|expandWorkspaceEvents| take 0\n    .set-or-append storageEventsExpanded <|expandStorageEvents| take 0","hideEmptyColumns":false,"cursorPosition":{"lineNumber":3,"column":5},"isProtectedMode":false},{"id":"74eddb84-eb80-4a86-bb68-94af743742db","queryRange":{"startLineNumber":1,"startColumn":1,"endLineNumber":37,"endColumn":12},"title":"Update Policies","text":".execute database script <|\n    .alter table jobEventsExpanded policy update \n    ```\n    [\n        {\n            \"IsEnabled\": true,\n            \"Source\": \"jobEvents\",\n            \"Query\": \"expandJobEvents()\",\n            \"IsTransactional\": false,\n            \"PropagateIngestionProperties\": false\n        }\n    ]\n    ```\n   .alter table workspaceEventsExpanded policy update \n    ```\n    [\n        {\n            \"IsEnabled\": true,\n            \"Source\": \"workspaceEvents\",\n            \"Query\": \"expandWorkspaceEvents()\",\n            \"IsTransactional\": false,\n            \"PropagateIngestionProperties\": false\n        }\n    ]\n    ```\n   .alter table storageEventsExpanded policy update \n    ```\n    [\n        {\n            \"IsEnabled\": true,\n            \"Source\": \"storageEvents\",\n            \"Query\": \"expandStorageEvents()\",\n            \"IsTransactional\": false,\n            \"PropagateIngestionProperties\": false\n        }\n    ]\n    ```    ","commandInContext":".execute database script <|\n    .alter table jobEventsExpanded policy update \n    ```\n    [\n        {\n            \"IsEnabled\": true,\n            \"Source\": \"jobEvents\",\n            \"Query\": \"expandJobEvents()\",\n            \"IsTransactional\": false,\n            \"PropagateIngestionProperties\": false\n        }\n    ]\n    ```\n   .alter table workspaceEventsExpanded policy update \n    ```\n    [\n        {\n            \"IsEnabled\": true,\n            \"Source\": \"workspaceEvents\",\n            \"Query\": \"expandWorkspaceEvents()\",\n            \"IsTransactional\": false,\n            \"PropagateIngestionProperties\": false\n        }\n    ]\n    ```\n   .alter table storageEventsExpanded policy update \n    ```\n    [\n        {\n            \"IsEnabled\": true,\n            \"Source\": \"storageEvents\",\n            \"Query\": \"expandStorageEvents()\",\n            \"IsTransactional\": false,\n            \"PropagateIngestionProperties\": false\n        }\n    ]\n    ```    ","executionStatus":"gotFromCache","clientRequestId":"Kusto.Web.RTA.QuerySet;0559afd2-5115-4a28-89c3-77ddc3e42295;9eecd90f-be17-4466-a076-8ed7e962324c","entityInContext":"-1921270356/b22b1edd-6292-97ea-4089-fe9314ea1177","commandType":"AdminCommand","commandWithoutLeadingComments":".execute database script <|\n    .alter table jobEventsExpanded policy update \n    ```\n    [\n        {\n            \"IsEnabled\": true,\n            \"Source\": \"jobEvents\",\n            \"Query\": \"expandJobEvents()\",\n            \"IsTransactional\": false,\n            \"PropagateIngestionProperties\": false\n        }\n    ]\n    ```\n   .alter table workspaceEventsExpanded policy update \n    ```\n    [\n        {\n            \"IsEnabled\": true,\n            \"Source\": \"workspaceEvents\",\n            \"Query\": \"expandWorkspaceEvents()\",\n            \"IsTransactional\": false,\n            \"PropagateIngestionProperties\": false\n        }\n    ]\n    ```\n   .alter table storageEventsExpanded policy update \n    ```\n    [\n        {\n            \"IsEnabled\": true,\n            \"Source\": \"storageEvents\",\n            \"Query\": \"expandStorageEvents()\",\n            \"IsTransactional\": false,\n            \"PropagateIngestionProperties\": false\n        }\n    ]\n    ```","hideEmptyColumns":false,"cursorPosition":{"lineNumber":30,"column":31},"isProtectedMode":false},{"id":"5b4b8472-6845-40c3-92e4-4bc1a8b7ede8","queryRange":{"startLineNumber":1,"startColumn":1,"endLineNumber":65,"endColumn":6},"title":"Materialized Views","text":".execute database script <|\n    // .drop materialized-view dailyAggWorkspaceEvents\n    .create async ifnotexists materialized-view with (backfill =true) dailyAggWorkspaceEvents on table workspaceEventsExpanded\n    {\n        workspaceEventsExpanded\n        |summarize  eventCount= count() by bin([\"time\"],1d),\n         type,\n         itemKind,\n         itemName,\n         workspaceName,\n         executingPrincipalId,\n         executingPrincipalType\n    }\n    //.drop materialized-view dailyAggJobEvents\n    .create async ifnotexists materialized-view with (backfill =true) dailyAggJobEvents on table  jobEventsExpanded\n    {\n        jobEventsExpanded\n        |project-away id, EventProcessedUtcTime,datacontenttype,specversion,source, dataschemaversion, PartitionId, EventEnqueuedUtcTime,\n                    itemId,workspaceId,jobDefinitionObjectId\n        |extend shortType = replace_string(type,\"Microsoft.Fabric.JobEvents.\",\"\")\n        | evaluate pivot(shortType,max(jobStartTimeUtc))  \n                        : ([\"time\"]:datetime,\n                        subject:string,\n                        type:string,\n                        itemName:string,\n                        workspaceName:string,\n                        itemKind:string,\n                        executingPrincipalId:string,\n                        executingPrincipalType:string,\n                        jobInstanceId:string,\n                        jobType:string,\n                        jobInvokeType:string,\n                        jobStatus:string,\n                        jobEndTimeUtc:datetime,\n                        jobScheduleTimeUtc:datetime,\n                        jobDurationSeconds:long,\n                        ItemJobCreated:datetime,\n                        ItemJobStatusChanged:datetime,\n                        ItemJobSucceeded:datetime)\n        | summarize arg_max([\"time\"],jobStatus),\n                jobScheduleTimeUtc = max(jobScheduleTimeUtc),\n                jobCreatedTimeUtc= max(ItemJobCreated),\n                jobStartTimeUtc = max(ItemJobSucceeded),\n                jobEndTimeUtc = max(jobEndTimeUtc)\n                by subject,\n                itemName,\n                workspaceName,\n                itemKind,\n                jobType,\n                executingPrincipalId,\n                executingPrincipalType,\n                jobInvokeType,\n                jobInstanceId\n    }\n    // .drop materialized-view dailyAggStorageEvents \n    .create async ifnotexists materialized-view with (backfill =true) dailyAggStorageEvents on table storageEventsExpanded\n    {\n        storageEventsExpanded\n        | extend type = replace_string(type,\"Microsoft.Fabric.OneLake.\",\"\")\n        | summarize oneLakeCount = count() by bin([\"time\"],1d),\n            source,\n            subject,\n            type,\n            api\n    }","commandInContext":".execute database script <|\n    // .drop materialized-view dailyAggWorkspaceEvents\n    .create async ifnotexists materialized-view with (backfill =true) dailyAggWorkspaceEvents on table workspaceEventsExpanded\n    {\n        workspaceEventsExpanded\n        |summarize  eventCount= count() by bin([\"time\"],1d),\n         type,\n         itemKind,\n         itemName,\n         workspaceName,\n         executingPrincipalId,\n         executingPrincipalType\n    }\n    //.drop materialized-view dailyAggJobEvents\n    .create async ifnotexists materialized-view with (backfill =true) dailyAggJobEvents on table  jobEventsExpanded\n    {\n        jobEventsExpanded\n        |project-away id, EventProcessedUtcTime,datacontenttype,specversion,source, dataschemaversion, PartitionId, EventEnqueuedUtcTime,\n                    itemId,workspaceId,jobDefinitionObjectId\n        |extend shortType = replace_string(type,\"Microsoft.Fabric.JobEvents.\",\"\")\n        | evaluate pivot(shortType,max(jobStartTimeUtc))  \n                        : ([\"time\"]:datetime,\n                        subject:string,\n                        type:string,\n                        itemName:string,\n                        workspaceName:string,\n                        itemKind:string,\n                        executingPrincipalId:string,\n                        executingPrincipalType:string,\n                        jobInstanceId:string,\n                        jobType:string,\n                        jobInvokeType:string,\n                        jobStatus:string,\n                        jobEndTimeUtc:datetime,\n                        jobScheduleTimeUtc:datetime,\n                        jobDurationSeconds:long,\n                        ItemJobCreated:datetime,\n                        ItemJobStatusChanged:datetime,\n                        ItemJobSucceeded:datetime)\n        | summarize arg_max([\"time\"],jobStatus),\n                jobScheduleTimeUtc = max(jobScheduleTimeUtc),\n                jobCreatedTimeUtc= max(ItemJobCreated),\n                jobStartTimeUtc = max(ItemJobSucceeded),\n                jobEndTimeUtc = max(jobEndTimeUtc)\n                by subject,\n                itemName,\n                workspaceName,\n                itemKind,\n                jobType,\n                executingPrincipalId,\n                executingPrincipalType,\n                jobInvokeType,\n                jobInstanceId\n    }\n    // .drop materialized-view dailyAggStorageEvents \n    .create async ifnotexists materialized-view with (backfill =true) dailyAggStorageEvents on table storageEventsExpanded\n    {\n        storageEventsExpanded\n        | extend type = replace_string(type,\"Microsoft.Fabric.OneLake.\",\"\")\n        | summarize oneLakeCount = count() by bin([\"time\"],1d),\n            source,\n            subject,\n            type,\n            api\n    }","executionStatus":"gotFromCache","clientRequestId":"Kusto.Web.RTA.QuerySet;c041c77e-db49-4ac0-96dd-6face62ae00a;02973fb8-154b-4367-99ea-30afc1936f45","entityInContext":"-1921270356/b22b1edd-6292-97ea-4089-fe9314ea1177","commandType":"AdminCommand","commandWithoutLeadingComments":".execute database script <|\n    // .drop materialized-view dailyAggWorkspaceEvents\n    .create async ifnotexists materialized-view with (backfill =true) dailyAggWorkspaceEvents on table workspaceEventsExpanded\n    {\n        workspaceEventsExpanded\n        |summarize  eventCount= count() by bin([\"time\"],1d),\n         type,\n         itemKind,\n         itemName,\n         workspaceName,\n         executingPrincipalId,\n         executingPrincipalType\n    }\n    //.drop materialized-view dailyAggJobEvents\n    .create async ifnotexists materialized-view with (backfill =true) dailyAggJobEvents on table  jobEventsExpanded\n    {\n        jobEventsExpanded\n        |project-away id, EventProcessedUtcTime,datacontenttype,specversion,source, dataschemaversion, PartitionId, EventEnqueuedUtcTime,\n                    itemId,workspaceId,jobDefinitionObjectId\n        |extend shortType = replace_string(type,\"Microsoft.Fabric.JobEvents.\",\"\")\n        | evaluate pivot(shortType,max(jobStartTimeUtc))  \n                        : ([\"time\"]:datetime,\n                        subject:string,\n                        type:string,\n                        itemName:string,\n                        workspaceName:string,\n                        itemKind:string,\n                        executingPrincipalId:string,\n                        executingPrincipalType:string,\n                        jobInstanceId:string,\n                        jobType:string,\n                        jobInvokeType:string,\n                        jobStatus:string,\n                        jobEndTimeUtc:datetime,\n                        jobScheduleTimeUtc:datetime,\n                        jobDurationSeconds:long,\n                        ItemJobCreated:datetime,\n                        ItemJobStatusChanged:datetime,\n                        ItemJobSucceeded:datetime)\n        | summarize arg_max([\"time\"],jobStatus),\n                jobScheduleTimeUtc = max(jobScheduleTimeUtc),\n                jobCreatedTimeUtc= max(ItemJobCreated),\n                jobStartTimeUtc = max(ItemJobSucceeded),\n                jobEndTimeUtc = max(jobEndTimeUtc)\n                by subject,\n                itemName,\n                workspaceName,\n                itemKind,\n                jobType,\n                executingPrincipalId,\n                executingPrincipalType,\n                jobInvokeType,\n                jobInstanceId\n    }\n    // .drop materialized-view dailyAggStorageEvents \n    .create async ifnotexists materialized-view with (backfill =true) dailyAggStorageEvents on table storageEventsExpanded\n    {\n        storageEventsExpanded\n        | extend type = replace_string(type,\"Microsoft.Fabric.OneLake.\",\"\")\n        | summarize oneLakeCount = count() by bin([\"time\"],1d),\n            source,\n            subject,\n            type,\n            api\n    }","hideEmptyColumns":false,"cursorPosition":{"lineNumber":56,"column":1},"isProtectedMode":false}],"tabInContext":"9e6e1619-d0c3-4827-bc1f-34cc9440777e"}}